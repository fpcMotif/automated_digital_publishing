<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2014  Stephan Kreutzer

This file is part of template1 for odt2html.

template1 for odt2html is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License version 3 or any later version,
as published by the Free Software Foundation.

template1 for odt2html is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License 3 for more details.

You should have received a copy of the GNU General Public License
along with template1 for odt2html. If not, see <http://www.gnu.org/licenses/>.
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns="http://www.w3.org/1999/xhtml" exclude-result-prefixes="xhtml">
  <xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes"/>

  <xsl:template match="xhtml:html">
    <xsl:comment> This file was generated by html2epub1_config of template1 for odt2html (https://github.com/skreutzer/automated_digital_publishing/). </xsl:comment><xsl:text>&#xA;</xsl:text>
    <html2epub1-config>
      <in>
        <xhtmlSchemaValidation>true</xhtmlSchemaValidation>
        <xhtmlReaderDTDValidation>false</xhtmlReaderDTDValidation>
        <xhtmlReaderNamespaceProcessing>true</xhtmlReaderNamespaceProcessing>
        <xhtmlReaderCoalesceAdjacentCharacterData>true</xhtmlReaderCoalesceAdjacentCharacterData>
        <xhtmlReaderResolveExternalParsedEntities>true</xhtmlReaderResolveExternalParsedEntities>
        <xhtmlReaderUseDTDNotDTDFallback>false</xhtmlReaderUseDTDNotDTDFallback>
        <xsl:if test="xhtml:head/xhtml:title//text()">
          <inFile title="Title">./title.html</inFile>
        </xsl:if>
        <xsl:choose>
          <xsl:when test="xhtml:body/xhtml:div[@class='part']">
            <xsl:for-each select="xhtml:body/xhtml:div[@class='part']">
              <inFile title="{./xhtml:h1/text()}"><xsl:text>./</xsl:text><xsl:value-of select="position()"/><xsl:text>.html</xsl:text></inFile>
              <xsl:variable name="current_part" select="position()"/> 
              <xsl:for-each select="./xhtml:div[@class='chapter']">
                <inFile title="{./xhtml:h2/text()}"><xsl:text>./</xsl:text><xsl:value-of select="$current_part"/><xsl:text>/</xsl:text><xsl:value-of select="position()"/><xsl:text>.html</xsl:text></inFile>
              </xsl:for-each>
            </xsl:for-each>
          </xsl:when>
          <xsl:when test="xhtml:body/xhtml:div[@class='chapter']">
            <xsl:for-each select="xhtml:body/xhtml:div[@class='chapter']">
              <inFile title="{./xhtml:h2/text()}"><xsl:text>./</xsl:text><xsl:value-of select="position()"/><xsl:text>.html</xsl:text></inFile>
            </xsl:for-each>
          </xsl:when>
        </xsl:choose>
      </in>
      <out>
        <outDirectory>.</outDirectory>
        <metaData>
          <title>
            <xsl:if test="xhtml:head/xhtml:title">
              <xsl:value-of select="xhtml:head/xhtml:title"/>
            </xsl:if>
          </title>
          <creator></creator>
          <subject></subject>
          <description></description>
          <publisher></publisher>
          <contributor></contributor>
          <identifier></identifier>
          <source></source>
          <language></language>
          <coverage></coverage>
          <rights></rights>
        </metaData>
      </out>
    </html2epub1-config>
  </xsl:template>

  <xsl:template match="text()|@*"/>

</xsl:stylesheet>
